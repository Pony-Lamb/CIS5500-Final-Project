# Generated by Django 5.2 on 2025-05-08 01:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="menudishes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("menu_name", models.CharField(max_length=100)),
                ("category", models.TextField(blank=True)),
                ("price", models.FloatField()),
                ("popularity_score", models.FloatField(default=0.0)),
            ],
            options={
                "db_table": "menudishes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="recipes",
            fields=[
                ("recipe_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=100)),
                ("ingredient", models.TextField()),
                ("directions", models.TextField()),
                ("ner", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "db_table": "recipes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="reviews",
            fields=[
                ("review_id", models.AutoField(primary_key=True, serialize=False)),
                ("text", models.TextField()),
                ("likes", models.IntegerField(default=0)),
                ("stars", models.IntegerField()),
                ("date", models.DateField(auto_now_add=True)),
            ],
            options={
                "db_table": "reviews",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="restaurants",
            fields=[
                (
                    "restaurant_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("address", models.TextField()),
                ("zip_code", models.CharField(max_length=20)),
                ("lat", models.FloatField()),
                ("lng", models.FloatField()),
                ("score", models.FloatField()),
                ("category", models.TextField()),
                ("price_range", models.CharField(max_length=3)),
            ],
            options={
                "db_table": "restaurants",
            },
        ),
        migrations.CreateModel(
            name="users",
            fields=[
                (
                    "user_id",
                    models.CharField(max_length=128, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=128)),
                ("password", models.CharField(max_length=128)),
                ("tags", models.TextField(blank=True)),
                ("profile", models.TextField(blank=True)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("email", models.TextField()),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("restaurant_id", models.IntegerField()),
                ("menu_name", models.CharField(max_length=100)),
                (
                    "recipe",
                    models.ForeignKey(
                        db_column="recipe_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="users.recipes",
                    ),
                ),
            ],
            options={
                "db_table": "match",
            },
        ),
    ]
